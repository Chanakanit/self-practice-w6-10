WEEK 6 — FUNCTIONAL PROGRAMMING

ในสัปดาห์นี้ เรียนรู้แนวคิดของ **Functional Programming (FP)**  
โดยเน้นการเขียนโค้ดแบบ “ฟังก์ชันบริสุทธิ์ (Pure Function)” ที่ไม่มีผลข้างเคียง  
ฝึกสร้าง **Higher-Order Function**, **Closure**, **Currying**, **Function Factory**,  
และการใช้ **Array Method** เช่น `map()`, `filter()`, `reduce()`  
ซึ่งทั้งหมดนี้ช่วยให้เขียนโค้ดที่ยืดหยุ่น เข้าใจง่าย และนำกลับมาใช้ซ้ำได้ดีขึ้น  
ผู้เรียนจะได้ฝึกการคิดเป็นลำดับขั้นตอนเชิงตรรกะ (logical flow)  
และเข้าใจการส่งฟังก์ชันเป็นพารามิเตอร์ รวมถึงการสร้างฟังก์ชันที่คืนค่าเป็นฟังก์ชันอื่น

──────────────────────────────
WEEK 7 — DOM ACCESS & MANIPULATION

หลังจากเข้าใจแนวคิดเชิงฟังก์ชันแล้ว จึงเริ่มเข้าสู่การทำงานกับ **DOM (Document Object Model)**  
เรียนรู้วิธีเข้าถึงและเปลี่ยนแปลงองค์ประกอบในหน้าเว็บ เช่น การใช้  
`getElementById()`, `querySelector()`, `createElement()`, `appendChild()`, `remove()`,  
และการจัดการ **attribute**, **class**, และ **style** ของ element  
รวมถึงการสร้างและลบ node แบบ dynamic ด้วย JavaScript  
ฝึกทำความเข้าใจความสัมพันธ์แบบ parent-child ของโครงสร้าง HTML  
และเรียนรู้การอ่าน–เขียนค่าจาก element แบบ real-time  
ช่วยพัฒนาทักษะ “การควบคุมโครงสร้างหน้าเว็บด้วยโค้ด” อย่างเป็นระบบ

──────────────────────────────
WEEK 8 — ADVANCED DOM OPERATIONS

สัปดาห์นี้ต่อยอดจาก DOM พื้นฐาน มุ่งเน้นการ **ปรับแต่งและจัดการองค์ประกอบอย่างลึกขึ้น**  
เช่น การ clone node, wrap element, toggle class, replace node, และ manipulate child node  
เน้นให้เข้าใจการเปลี่ยนแปลงโครงสร้าง HTML แบบโต้ตอบ (interactive)  
รวมถึงการผูก **event listener** ให้กับ element หลายตัวในครั้งเดียว  
และการใช้เทคนิค dynamic DOM creation ที่สอดคล้องกับข้อมูลที่เปลี่ยนแปลงได้  
เป็นการฝึกใช้ JavaScript เพื่อ “ควบคุมเอกสาร HTML ทั้งหมด” อย่างยืดหยุ่น  
และเตรียมพื้นฐานสำหรับการจัดการ Event ในสัปดาห์ถัดไป

──────────────────────────────
WEEK 9 — EVENT HANDLING

สัปดาห์นี้เป็นจุดเปลี่ยนสำคัญจาก “DOM แบบคงที่” ไปสู่ “เว็บที่ตอบสนองต่อผู้ใช้”  
โดยเน้นการฝึก **Event Handling**  
ผู้เรียนจะเข้าใจโครงสร้าง Event Object, การทำงานของ **Event Bubbling / Capturing**,  
การใช้ `addEventListener()` ในรูปแบบต่าง ๆ, การ remove listener,  
และเทคนิคอย่าง `once: true`, การ **preventDefault()**, การ **Event Delegation**  
รวมถึงการแยก event ของ mouse, keyboard, scroll, resize  
เพื่อให้หน้าเว็บสามารถตอบสนองกับการกระทำของผู้ใช้ได้ทันที  
ผลลัพธ์คือสามารถเขียนเว็บที่ “โต้ตอบได้จริง” โดยไม่ต้องรีเฟรชหน้าเว็บ

──────────────────────────────
WEEK 10 — CLIENT STORAGE (LOCAL, SESSION, COOKIE)

สัปดาห์สุดท้ายของช่วงนี้ เน้นเรื่อง **Client-Side Storage API**  
ฝึกใช้ `localStorage`, `sessionStorage`, และ `document.cookie`  
เพื่อเก็บข้อมูลระหว่างการใช้งาน เช่น สีพื้นหลัง ตัวอักษร การตั้งค่าผู้ใช้ หรือสถานะการล็อกอิน  
เรียนรู้การใช้ `setItem()`, `getItem()`, `removeItem()`, และ `clear()`  
รวมถึงการแปลงข้อมูลด้วย `JSON.stringify()` และ `JSON.parse()` เพื่อเก็บ object  
ในส่วน cookie ได้ฝึกตั้งค่า, อ่านค่า, เข้ารหัส–ถอดรหัส, และกำหนดวันหมดอายุของ cookie  
ทั้งหมดนี้ช่วยให้เข้าใจการ “จำสถานะของผู้ใช้” และสร้างประสบการณ์เว็บที่ต่อเนื่อง  
แม้เมื่อผู้ใช้ปิดหรือโหลดหน้าใหม่ก็ตาม
